- name: integration-default
  tags:
    - integration
  command: >
    bash -c "
    source tests/helper.sh

    snakemake \
      --reason \
      --printshellcmds \
      --jobs \
      --latency-wait 5 \
      --use-singularity --singularity-args ' --cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      --config pepfile=tests/pep/project_config.yaml \
      --configfile=tests/settings.json \
      --snakefile Snakefile \
      --notemp
      "
  files:
    - path: sample1/concat/forward.fastq.gz
    - path: sample1/concat/reverse.fastq.gz
    - path: sample1/concat/umi.fastq.gz
    - path: humid/sample1/forward_dedup.fastq.gz
    - path: humid/sample1/reverse_dedup.fastq.gz
    - path: humid/sample1/umi_dedup.fastq.gz
    - path: humid/sample1/stats.dat
      contains:
        - 'total:'
    - path: log/sample1.humid.txt
      contains:
        - Calculating neighbours using Hamming distance
        - Calculating directional clusters
    - path: sample1/align/Aligned.sortedByCoord.out.bam
    - path: sample1/umi-tools/sample1.bam
    - path: umi-stats.tsv
      md5sum: e02c254371202a6f122225b472629f8b
      contains:
        - humid_perc_duplicates
        - umi_tools_perc_duplicates
        - sample1
        - sample2
    - path: sample1/sample1.umi.forward.fastq.gz
      contains:
        - '@ERR2438055.20253_CCCCCCCC'
    # The pipeline should generate a MultiQC report file
    - path: multiqc_report.html
      contains:
        # The report should contain a section for HUMID
        - HUMID
        - Neighbour statistics
        - Counts statistics
        - Cluster statistics
        # The report should contain a section for UMI-Tools
        - UMI-tools 
        # The report should contain a section for STAR alignment statistics
        - STAR
        # The report should countain a section for Picard insert size
        # statistics
        - Insert Size
        # The report should contain a section for FastQC
        - FastQC
        # The report should contain both samples
        - sample1
        - sample2
      must_not_contain:
        # We should hide the data paths from the MultiQC report
        - "based on data in:"
        # Hide UMI-Tools file names
        - "sample1/align/Aligned.sortedByCoord.out.bam"
        # Clean up the sample names from Picard insert size statistics
        - "multiple_metrics"
        # Clean up the sample names from FastQC
        - "forward_fastqc.zip"
        - "reverse_fastqc.zip"
    - path: benchmarks/STAR_sample1.tsv
    - path: benchmarks/humid_sample1.tsv
    - path: benchmarks/umi_tools_sample1.tsv
    - path: benchmarks/s.tsv
    - path: benchmarks/max_rss.tsv
    - path: benchmarks/cpu_time.tsv

- name: integration-extended
  tags:
    - integration
  command: >
    bash -c "
    source tests/helper.sh

    snakemake \
      --reason \
      --printshellcmds \
      --cores 1 \
      --latency-wait 5 \
      --use-singularity --singularity-args ' --cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      --config pepfile=tests/pep/project_config.yaml \
      --configfile=tests/settings.json \
      --snakefile Snakefile \
      --notemp \
      --until extended
      "
  files:
    - path: sample1/umi-tools/forward.fastq.gz
    - path: sample1/umi-tools/reverse.fastq.gz
    - path: sample1/umi-tools/umi.fastq.gz
    - path: sample1/umi-tools/humid/forward_dedup.fastq.gz
    - path: sample1/umi-tools/humid/stats.dat
    - path: sample1/humid/umi-tools/sample1.umi.forward.fastq.gz
    - path: sample1/humid/umi-tools/align/Aligned.sortedByCoord.out.bam
      md5sum: b6b3c29187546e262046bbc72c1d479d
    - path: sample1/humid/umi-tools/align/Aligned.sortedByCoord.out.bam.bai
    - path: sample1/humid/umi-tools/sample1.bam
    - path: sample1/concat/bias.txt
    - path: sample1/concat/alphabetic.csv
    - path: sample1/concat/descending.csv
    # The pipeline should generate a MultiQC report file
    - path: multiqc_report_humid_after_umi_tools.html
    - path: multiqc_report_umi_tools_after_humid.html
      must_not_contain:
        - "integration-vanilla"
        - "sample1_umi_tools_after_humid"
    - path: alphabetic_fraction.csv
      contains:
        - "UMI,sample1,sample2"
    - path: cumulative_frac_desc.csv
      contains:
        - "sample1,sample2"

- name: integration-subsamples
  tags:
    - integration
  command: >
    bash -c "
    source tests/helper.sh

    snakemake \
      --reason \
      --printshellcmds \
      --jobs \
      --latency-wait 5 \
      --use-singularity --singularity-args ' --cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      --config pepfile=tests/pep/project_subsamples.yaml \
      --configfile=tests/settings.json \
      --snakefile Snakefile
    "
  files:
    - path: sample1/concat/forward.fastq.gz
      should_exist: false
    - path: sample2/concat/forward.fastq.gz
      should_exist: false
    - path: humid/sample1/forward_dedup.fastq.gz
    - path: humid/sample2/forward_dedup.fastq.gz
    - path: sample1/align/Aligned.sortedByCoord.out.bam
    - path: sample1/align/Aligned.sortedByCoord.out.bam.bai
    - path: sample1/umi-tools/sample1.bam
    - path: sample2/align/Aligned.sortedByCoord.out.bam
    - path: sample2/align/Aligned.sortedByCoord.out.bam.bai
    - path: sample2/umi-tools/sample2.bam
    - path: multiqc_report.html
      must_not_contain:
        - integration-subsamples

- name: integration-directional
  tags:
    - integration
  command: >
    bash -c "
    source tests/helper.sh

    snakemake \
      --reason \
      --printshellcmds \
      --jobs \
      --latency-wait 5 \
      --use-singularity --singularity-args ' --cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      --config \
        pepfile=tests/pep/project_config.yaml \
        cluster_method=directional \
      --configfile=tests/settings.json \
      --snakefile Snakefile \
      --notemp \
      --until humid umi_tools
      "
  files:
    - path: log/sample1.humid.txt
      contains:
        - Calculating neighbours using Hamming distance
        - Calculating directional clusters

- name: integration-maximum
  tags:
    - integration
  command: >
    bash -c "
    source tests/helper.sh

    snakemake \
      --reason \
      --printshellcmds \
      --jobs \
      --latency-wait 5 \
      --use-singularity --singularity-args ' --cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      --config \
        pepfile=tests/pep/project_config.yaml \
        cluster_method=maximum \
      --configfile=tests/settings.json \
      --snakefile Snakefile \
      --notemp \
      --until humid umi_tools
      "
  files:
    - path: log/sample1.humid.txt
      contains:
        - "Calculating neighbours using Hamming distance"
        - "Calculating maximum clusters"
