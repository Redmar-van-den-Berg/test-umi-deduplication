- name: dry-run-vanilla
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_config.yaml
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    contains:
      - sample1/concat/forward.fastq.gz
      - humid/sample1/forward_dedup.fastq.gz
      - sample1/align/Aligned.sortedByCoord.out.bam
      - sample1/align/Aligned.sortedByCoord.out.bam.bai
      - sample1/sample1.umi.forward.fastq.gz
      - sample1/umi-tools/sample1.bam
      - sample1/umi-tools/forward.fastq.gz
      - sample1/umi-tools/humid/forward_dedup.fastq.gz
      - sample1/humid/umi-tools/sample1.umi.forward.fastq.gz
      - sample1/humid/umi-tools/align/Aligned.sortedByCoord.out.bam
      - sample1/humid/umi-tools/sample1.bam
      - benchmarks/s.tsv
      - benchmarks/max_rss.tsv
      - benchmarks/cpu_time.tsv
      - rule multiqc_humid_after_umi_tools

- name: dry-run-subsamples
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config pepfile=tests/pep/project_subsamples.yaml
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    contains:
      - sample1/concat/forward.fastq.gz
      - sample2/concat/forward.fastq.gz
      - humid/sample1/forward_dedup.fastq.gz
      - humid/sample2/forward_dedup.fastq.gz
      - sample1/align/Aligned.sortedByCoord.out.bam
      - sample1/align/Aligned.sortedByCoord.out.bam.bai
      - sample2/align/Aligned.sortedByCoord.out.bam
      - sample2/align/Aligned.sortedByCoord.out.bam.bai
      - sample2/umi-tools/sample2.bam
      - sample2/sample2.umi.forward.fastq.gz
    contains_regex:
      # Test if specifying multiple fastq files using subsamples is handled
      - "cp tests/data/micro_R1.fq.gz tests/data/micro_R1.fq.gz sample1/concat/forward.fastq.gz"
      - "cp tests/data/micro_R1.fq.gz sample2/concat/forward.fastq.gz"

- name: dry-run-directional-cluster
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config
        pepfile=tests/pep/project_config.yaml
        cluster_method=directional
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    must_not_contain_regex:
      - "humid .* -x"
    contains_regex:
      - "umi_tools .* --method directional"

- name: dry-run-maximum-cluster
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config
        pepfile=tests/pep/project_config.yaml
        cluster_method=maximum
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    contains_regex:
      - "humid .* -x"
      - "umi_tools .* --method cluster"
