- name: dry-run-default
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --configfile=tests/settings.json
      --config
        pepfile=tests/pep/project_config.yaml
        reference=tests/data/reference/hamlet-ref.fa.xz
      --snakefile Snakefile
  stdout:
    contains:
      - sample1/concat/forward.fastq.gz
      - humid/sample1/forward_dedup.fastq.gz
      - sample1/align/Aligned.sortedByCoord.out.bam
      - sample1/align/Aligned.sortedByCoord.out.bam.bai
      - sample1/sample1.umi.forward.fastq.gz
      - sample1/umi-tools/sample1.bam
      - benchmarks/s.tsv
      - benchmarks/max_rss.tsv
      - benchmarks/cpu_time.tsv
      - rule picard_multiple_stats
      - rule fastqc
    contains_regex:
      # Test that we pass the "word_size" configuration option to HUMID
      - "humid .* -n 24"

- name: dry-run-extended
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --configfile=tests/settings.json
      --config
        pepfile=tests/pep/project_config.yaml
        reference=tests/data/reference/hamlet-ref.fa.xz
      --snakefile Snakefile
      --until extended
  stdout:
    contains:
      - sample1/concat/forward.fastq.gz
      - humid/sample1/forward_dedup.fastq.gz
      - sample1/align/Aligned.sortedByCoord.out.bam
      - sample1/align/Aligned.sortedByCoord.out.bam.bai
      - sample1/sample1.umi.forward.fastq.gz
      - sample1/umi-tools/sample1.bam
      - sample1/umi-tools/forward.fastq.gz
      - sample1/umi-tools/humid/forward_dedup.fastq.gz
      - sample1/humid/umi-tools/sample1.umi.forward.fastq.gz
      - sample1/humid/umi-tools/align/Aligned.sortedByCoord.out.bam
      - sample1/humid/umi-tools/sample1.bam
      - benchmarks/s.tsv
      - benchmarks/max_rss.tsv
      - benchmarks/cpu_time.tsv
      - rule multiqc_humid_after_umi_tools
      - rule multiqc_umi_tools_after_humid
      - rule picard_multiple_stats
      - rule fastqc
      - rule umi_counter
      - rule summarize_umi_bias
      - "--bias sample1/concat/bias.txt sample2/concat/bias.txt"
      - rule summarize_umi_counter
    contains_regex:
      # Test that we pass the "word_size" configuration option to HUMID
      - "humid .* -n 24"
- name: dry-run-subsamples
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --configfile=tests/settings.json
      --config
        pepfile=tests/pep/project_subsamples.yaml
        reference=tests/data/reference/hamlet-ref.fa.xz
        word_size=32
      --snakefile Snakefile
  stdout:
    contains:
      - sample1/concat/forward.fastq.gz
      - sample2/concat/forward.fastq.gz
      - humid/sample1/forward_dedup.fastq.gz
      - humid/sample2/forward_dedup.fastq.gz
      - sample1/align/Aligned.sortedByCoord.out.bam
      - sample1/align/Aligned.sortedByCoord.out.bam.bai
      - sample2/align/Aligned.sortedByCoord.out.bam
      - sample2/align/Aligned.sortedByCoord.out.bam.bai
      - sample2/umi-tools/sample2.bam
      - sample2/sample2.umi.forward.fastq.gz
    contains_regex:
      # Test if specifying multiple fastq files using subsamples is handled
      - "cp tests/data/micro_R1.fq.gz tests/data/micro_R1.fq.gz sample1/concat/forward.fastq.gz"
      - "cp tests/data/micro_R1.fq.gz sample2/concat/forward.fastq.gz"
      # Test if the specified word size is passed to HUMID
      - "humid .* -n 32"

- name: dry-run-directional-cluster
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config
        pepfile=tests/pep/project_config.yaml
        cluster_method=directional
        reference=tests/data/reference/hamlet-ref.fa.xz
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    must_not_contain_regex:
      - "humid .* -x"
    contains_regex:
      - "umi_tools .* --method directional"

- name: dry-run-maximum-cluster
  tags:
    - dry-run
  command: >
    snakemake
      --dryrun
      --reason
      --printshellcmds
      --config
        pepfile=tests/pep/project_config.yaml
        cluster_method=maximum
        reference=tests/data/reference/hamlet-ref.fa.xz
      --configfile=tests/settings.json
      --snakefile Snakefile
  stdout:
    contains_regex:
      - "humid .* -x"
      - "umi_tools .* --method cluster"
